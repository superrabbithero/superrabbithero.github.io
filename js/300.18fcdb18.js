"use strict";(self["webpackChunkaugest"]=self["webpackChunkaugest"]||[]).push([[300],{648:function(t,e,i){var s=i(1694),o=i(614),h=i(4326),l=i(5112),r=l("toStringTag"),n=Object,a="Arguments"==h(function(){return arguments}()),c=function(t,e){try{return t[e]}catch(i){}};t.exports=s?h:function(t){var e,i,s;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(i=c(e=n(t),r))?i:a?h(e):"Object"==(s=h(e))&&o(e.callee)?"Arguments":s}},7045:function(t,e,i){var s=i(6339),o=i(3070);t.exports=function(t,e,i){return i.get&&s(i.get,e,{getter:!0}),i.set&&s(i.set,e,{setter:!0}),o.f(t,e,i)}},1694:function(t,e,i){var s=i(5112),o=s("toStringTag"),h={};h[o]="z",t.exports="[object z]"===String(h)},1340:function(t,e,i){var s=i(648),o=String;t.exports=function(t){if("Symbol"===s(t))throw TypeError("Cannot convert a Symbol value to a string");return o(t)}},8053:function(t){var e=TypeError;t.exports=function(t,i){if(t<i)throw e("Not enough arguments");return t}},6229:function(t,e,i){var s=i(8052),o=i(1702),h=i(1340),l=i(8053),r=URLSearchParams,n=r.prototype,a=o(n.append),c=o(n["delete"]),d=o(n.forEach),g=o([].push),w=new r("a=1&a=2&b=3");w["delete"]("a",1),w["delete"]("b",void 0),w+""!=="a=2"&&s(n,"delete",(function(t){var e=arguments.length,i=e<2?void 0:arguments[1];if(e&&void 0===i)return c(this,t);var s=[];d(this,(function(t,e){g(s,{key:e,value:t})})),l(e,1);var o,r=h(t),n=h(i),w=0,p=0,v=!1,u=s.length;while(w<u)o=s[w++],v||o.key===r?(v=!0,c(this,o.key)):p++;while(p<u)o=s[p++],o.key===r&&o.value===n||a(this,o.key,o.value)}),{enumerable:!0,unsafe:!0})},7330:function(t,e,i){var s=i(8052),o=i(1702),h=i(1340),l=i(8053),r=URLSearchParams,n=r.prototype,a=o(n.getAll),c=o(n.has),d=new r("a=1");!d.has("a",2)&&d.has("a",void 0)||s(n,"has",(function(t){var e=arguments.length,i=e<2?void 0:arguments[1];if(e&&void 0===i)return c(this,t);var s=a(this,t);l(e,1);var o=h(i),r=0;while(r<s.length)if(s[r++]===o)return!0;return!1}),{enumerable:!0,unsafe:!0})},2062:function(t,e,i){var s=i(9781),o=i(1702),h=i(7045),l=URLSearchParams.prototype,r=o(l.forEach);s&&!("size"in l)&&h(l,"size",{get:function(){var t=0;return r(this,(function(){t++})),t},configurable:!0,enumerable:!0})},1300:function(t,e,i){i.r(e),i.d(e,{default:function(){return M}});var s=i(9812),o=i(5893),h=i(4220);const l=t=>((0,s.dD)("data-v-c59a53f2"),t=t(),(0,s.Cn)(),t),r={class:"tool-setting-bar"},n={class:"left"},a={class:"tool-option"},c={class:"label",style:{width:"91px"}},d={class:"right"},g={class:"icon-item"},w={class:"size"},p=l((()=>(0,s._)("span",null,"x",-1))),v={class:"icon-item"},u={class:"work-area"},x={class:"left"},m={class:"tools-bar"},f={class:"tool-item-fullscreen"},y={style:{position:"absolute",left:"1rem"}},S=["width","height"],C={class:"right"},z=["width","height"],R={class:"overview-tools"},D={class:"color-item draged",ref:"dragedColor"},P=["onPointerdown","onPointerup"],b={class:"color-item"};function k(t,e,i,l,k,_){const $=(0,s.up)("svg-icon");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("div",r,[(0,s._)("div",n,[(0,s._)("div",a,[(0,s._)("div",c,"画笔大小("+(0,o.zw)(k.penSize)+"):",1),(0,s.wy)((0,s._)("input",{type:"range",style:{color:"currentColor"},"onUpdate:modelValue":e[0]||(e[0]=t=>k.penSize=t),min:"1",max:"20"},null,512),[[h.nr,k.penSize]])])]),(0,s._)("div",d,[(0,s._)("div",{class:"icon-item",onClick:e[1]||(e[1]=t=>k.toolsShow=!k.toolsShow)},[(0,s.Wm)($,{name:"phone"})]),(0,s._)("div",{class:"icon-item",onClick:e[2]||(e[2]=(...t)=>_.undo&&_.undo(...t))},[(0,s.Wm)($,{name:"undo01"})]),(0,s._)("div",{class:"icon-item-box",onClick:e[5]||(e[5]=t=>_.dropDown(t,"sizeSettingShow"))},[(0,s._)("div",g,[(0,s.Wm)($,{name:"canvas01"})]),(0,s._)("div",{class:(0,o.C_)({"size-setting":!0,show:k.dropDownBoxShow.sizeSettingShow})},[(0,s.Uk)(" 画布大小： "),(0,s._)("div",w,[(0,s.wy)((0,s._)("input",{type:"number","onUpdate:modelValue":e[3]||(e[3]=t=>k.rows=t)},null,512),[[h.nr,k.rows]]),p,(0,s.wy)((0,s._)("input",{type:"number","onUpdate:modelValue":e[4]||(e[4]=t=>k.cols=t)},null,512),[[h.nr,k.cols]])])],2)]),(0,s._)("div",{class:"icon-item-box",onClick:e[9]||(e[9]=t=>_.dropDown(t,"downloadShow"))},[(0,s._)("div",v,[(0,s.Wm)($,{name:"download01"})]),(0,s._)("div",{class:(0,o.C_)({"size-setting":!0,show:k.dropDownBoxShow.downloadShow})},[(0,s._)("div",{class:"drop-down-option",onClick:e[6]||(e[6]=(...t)=>_.saveAsSvg&&_.saveAsSvg(...t))},"保存成 svg"),(0,s._)("div",{class:"drop-down-option",onClick:e[7]||(e[7]=(...t)=>_.copySvgCode&&_.copySvgCode(...t))},"复制 svg 代码"),(0,s._)("div",{class:"drop-down-option",onClick:e[8]||(e[8]=(...t)=>_.saveAsPng&&_.saveAsPng(...t))},"保存成 png")],2)])])]),(0,s._)("div",u,[(0,s.wy)((0,s._)("div",x,[(0,s._)("div",m,[(0,s._)("div",{class:(0,o.C_)({"tool-item":!0,active:1==k.tool}),onClick:e[10]||(e[10]=t=>_.switchTool(1))},[(0,s.Wm)($,{name:"pencil",className:"tool-item-svg"})],2),(0,s._)("div",{class:(0,o.C_)({"tool-item":!0,active:2==k.tool}),onClick:e[11]||(e[11]=t=>_.switchTool(2))},[(0,s.Wm)($,{name:"eraser",className:"tool-item-svg"})],2),(0,s._)("div",{class:(0,o.C_)({"tool-item":!0,active:3==k.tool}),onClick:e[12]||(e[12]=t=>_.switchTool(3))},[(0,s.Wm)($,{name:"line",className:"tool-item-svg"})],2),(0,s._)("div",{class:(0,o.C_)({"tool-item":!0,active:4==k.tool}),onClick:e[13]||(e[13]=t=>_.switchTool(4))},[(0,s.Wm)($,{name:"rect",className:"tool-item-svg"})],2),(0,s._)("div",{class:(0,o.C_)({"tool-item":!0,active:5==k.tool}),onClick:e[14]||(e[14]=t=>_.switchTool(5))},[(0,s.Wm)($,{name:"circle",className:"tool-item-svg"})],2),(0,s._)("div",{class:(0,o.C_)({"tool-item":!0,active:6==k.tool}),onClick:e[15]||(e[15]=t=>_.switchTool(6))},[(0,s.Wm)($,{name:"paintBuckets",className:"tool-item-svg"})],2),(0,s._)("div",{class:(0,o.C_)({"tool-item":!0,active:7==k.tool}),onClick:e[16]||(e[16]=t=>_.switchTool(7))},[(0,s.Wm)($,{name:"select",className:"tool-item-svg"})],2),(0,s._)("div",{class:"tool-item",onClick:e[17]||(e[17]=(...t)=>_.clearAll&&_.clearAll(...t))},[(0,s.Wm)($,{name:"delete02",className:"tool-item-svg"})]),(0,s._)("div",f,[(0,s._)("div",{class:"color back",style:(0,o.j5)({backgroundColor:k.bkgColor}),onClick:e[18]||(e[18]=t=>[k.currentColor,k.bkgColor]=[k.bkgColor,k.currentColor])},null,4),(0,s._)("div",{class:"color front",style:(0,o.j5)({backgroundColor:k.currentColor})},[(0,s._)("input",{type:"color",class:"colorInput-hidden",ref:"addColor1",onChange:e[19]||(e[19]=t=>_.addColor(t))},null,544)],4)])])],512),[[h.F8,k.toolsShow]]),(0,s._)("div",{class:"middle",onPointermove:e[21]||(e[21]=(...t)=>_.handlePointerMove&&_.handlePointerMove(...t)),onPointerup:e[22]||(e[22]=(...t)=>_.handlePointerUp&&_.handlePointerUp(...t)),ref:"realViewport",onWheel:e[23]||(e[23]=(...t)=>_.zoomWheel&&_.zoomWheel(...t))},[(0,s._)("div",y,(0,o.zw)(k.coordinate),1),(0,s._)("div",{class:"drawing-area",onPointerdown:e[20]||(e[20]=(...t)=>_.handlePointerDown&&_.handlePointerDown(...t))},[(0,s._)("canvas",{width:_.width,height:_.height,class:"gridsytle",style:(0,o.j5)(_.canvasStyle),ref:"canvas"},null,12,S)],32)],544),(0,s.wy)((0,s._)("div",C,[(0,s._)("div",{class:"overview",onPointermove:e[25]||(e[25]=(...t)=>_.dragViewportMove&&_.dragViewportMove(...t)),onPointerup:e[26]||(e[26]=(...t)=>_.dragViewportUp&&_.dragViewportUp(...t)),onWheel:e[27]||(e[27]=(...t)=>_.zoomWheel&&_.zoomWheel(...t))},[(0,s._)("canvas",{class:"gridsytle",ref:"canvas_overview",style:(0,o.j5)(_.overviewStyle),width:_.overviewSize.width,height:_.overviewSize.height},null,12,z),(0,s._)("div",{class:"viewport",ref:"viewport",onPointerdown:e[24]||(e[24]=(...t)=>_.dragViewportDown&&_.dragViewportDown(...t))},null,544)],32),(0,s._)("div",R,[(0,s._)("div",{class:"icon-item",onClick:e[28]||(e[28]=(...t)=>_.zoomIn&&_.zoomIn(...t))},[(0,s.Wm)($,{name:"zoomIn"})]),(0,s._)("div",{class:"icon-item",onClick:e[29]||(e[29]=(...t)=>_.zoomOut&&_.zoomOut(...t))},[(0,s.Wm)($,{name:"zoomOut"})]),(0,s.wy)((0,s._)("input",{type:"range",style:{width:"80px",color:"currentColor"},min:"10",max:"100","onUpdate:modelValue":e[30]||(e[30]=t=>k.scaleCount=t),onInput:e[31]||(e[31]=(...t)=>_.resizeViewport&&_.resizeViewport(...t))},null,544),[[h.nr,k.scaleCount]]),(0,s._)("div",{class:"icon-item",onClick:e[32]||(e[32]=(...t)=>_.zoomFit&&_.zoomFit(...t))},[(0,s.Wm)($,{name:"fit01"})])]),(0,s._)("div",{class:"color-tools",ref:"colorTools",onPointermove:e[35]||(e[35]=e=>_.handleMove(e,t.index))},[(0,s.wy)((0,s._)("div",D,null,512),[[h.F8,null!=k.dragedColorIndex]]),((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(k.myColors,((t,e)=>((0,s.wg)(),(0,s.iD)("div",{class:"color-item",ref_for:!0,ref:"colorItem",style:(0,o.j5)({backgroundColor:t}),onPointerdown:t=>_.handleStart(t,e),onPointerup:t=>_.handleEnd(t,e)},null,44,P)))),256)),(0,s._)("div",b,[(0,s.Uk)("+ "),(0,s._)("input",{type:"color",class:"colorInput-hidden",ref:"addColor2",onChange:e[33]||(e[33]=t=>_.addColor(t))},null,544)]),(0,s._)("div",{class:(0,o.C_)({"color-item delete":!0,show:null!=k.dragedColorIndex}),onPointerup:e[34]||(e[34]=e=>_.handleEnd(t.event,-1))},[(0,s.Wm)($,{name:"delete02",className:"color-item-svg"})],34)],544)],512),[[h.F8,k.toolsShow]])])],64)}i(7658),i(6229),i(7330),i(2062);var _={computed:{width(){return this.cols*this.gridSize},height(){return this.rows*this.gridSize},overviewSize(){let t=180,e=t/this.cols*this.rows;return e>140&&(e=140,t=e/this.rows*this.cols),{width:t,height:e}},overviewStyle(){const t=this.overviewSize.width/this.cols;return{backgroundSize:`${2*t}px ${2*t}px`,backgroundPosition:`0 0 , ${t}px ${t}px`}},canvasStyle(){const t=this.scaleCount/100,e=this.gridSize*t;return{width:this.width*t+"px",height:this.height*t+"px",backgroundSize:`${2*e}px ${2*e}px`,backgroundPosition:`0 0 , ${e}px ${e}px`}}},data(){return{tool:1,rows:13,cols:13,gridSize:100,coordinate:"x:0,y:0",currentColor:"#000",bkgColor:"#fff",myColors:["#000000","#ffffff","#F96635","#f9A822","#FAEC86","#93d3a2","#2bbaa5","#008080"],colorIndex:0,dragedColorIndex:null,isDrawing:!1,pixels:[],endPoints:{x:0,y:0},maincanvas:null,ctx:null,ovCtx:null,historys:[],log:"",shiftdown:!1,dropDownBox:null,dropDownBoxShow:{sizeSettingShow:!1,downloadShow:!1},penSize:1,scaleCount:30,minScaleCount:30,viewport:null,disx:0,disy:0,selectedRect:{x:0,y:0,width:0,height:0},offscreenCanvas:null,selectedImgData:null,selectedBgData:null,isDragingSelectRect:!1,selectRectAnimateId:0,pressTimer:null,toolsShow:!0}},mounted(){this.init(),window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp),this.$refs.realViewport.addEventListener("scroll",this.viewportScroll)},unmounted(){window.removeEventListener("keydown",this.handleKeyDown),window.removeEventListener("keyup",this.handleKeyUp),this.$refs.realViewport&&this.$refs.realViewport.removeEventListener("scroll",this.viewportScroll),document.removeEventListener("click",this.closeDropDownBox)},methods:{handleStart(t,e){this.pressTimer=setTimeout((()=>{this.dragedColorIndex=e;const i=t.target;this.disx=t.pageX-i.offsetLeft,this.disy=t.pageY-i.offsetTop;const s=this.$refs.dragedColor;s.style.backgroundColor=this.myColors[this.dragedColorIndex],s.style.left=t.pageX-this.disx+"px",s.style.top=t.pageY-this.disy+"px",clearTimeout(this.pressTimer),this.pressTimer=null}),500)},handleMove(t,e){if(this.pressTimer&&(clearTimeout(this.pressTimer),this.pressTimer=null),null!=this.dragedColorIndex){const e=this.$refs.dragedColor;e.style.backgroundColor=this.myColors[this.dragedColorIndex],e.style.left=t.pageX-this.disx+"px",e.style.top=t.pageY-this.disy+"px"}},handleEnd(t,e){if(this.pressTimer&&(clearTimeout(this.pressTimer),this.pressTimer=null,this.selectColor(e)),null!=this.dragedColorIndex)if(-1==e)this.myColors.splice(this.dragedColorIndex,1),this.dragedColorIndex=null;else{const t=this.myColors[e];this.myColors[e]=this.myColors[this.dragedColorIndex],this.myColors[this.dragedColorIndex]=t,this.dragedColorIndex=null}},selectColor(t){this.currentColor=this.myColors[t]},addColor(t){const e=t.currentTarget,i=e.value;this.myColors.includes(i)||this.myColors.push(i),this.currentColor=i},switchTool(t){this.tool!=t&&(7==this.tool&&(this.selectedImgData=null,this.selectedRect={x:0,y:0,width:0,height:0},cancelAnimationFrame(this.selectRectAnimateId),this.selectRectAnimateId=0,this.showLastHistory()),7==t&&(this.selectedBgData=this.ctx.getImageData(0,0,this.width,this.height)),this.tool=t)},updateOverview(){this.ovCtx.clearRect(0,0,this.overviewSize.width,this.overviewSize.height),this.ovCtx.drawImage(this.maincanvas,0,0,this.width,this.height,0,0,this.overviewSize.width,this.overviewSize.height)},dropDown(t,e){this.dropDownBox=t.target;const i=Object.keys(this.dropDownBoxShow);i.forEach((t=>{this.dropDownBoxShow[t]=!1})),this.dropDownBoxShow[e]=!0,document.addEventListener("click",this.closeDropDownBox)},closeDropDownBox(t){if(!this.dropDownBox.contains(t.target)){const t=Object.keys(this.dropDownBoxShow);t.forEach((t=>{this.dropDownBoxShow[t]=!1})),document.removeEventListener("click",this.closeDropDownBox)}},switchColor(t){const e=this.getColorAtPixel(t),i="rgba("+e.r+","+e.g+","+e.b+","+e.a+")";"rgba(0,0,0,0)"!=i&&(this.currentColor=i)},handleKeyDown(t){"Shift"===t.key&&(this.shiftdown=!0)},handleKeyUp(t){"Shift"===t.key&&(this.shiftdown=!1)},init(){window.PointerEvent&&(this.log="Pointer events are supported."),this.maincanvas=this.$refs.canvas;const t=this.$refs.canvas_overview;this.ctx=this.maincanvas.getContext("2d"),this.ctx.lineWidth=1,this.ovCtx=t.getContext("2d"),this.addHistory(),this.resizeViewport(),this.getMinScale(),this.scaleCount=this.minScaleCount,this.offscreenCanvas=document.createElement("canvas")},getMinScale(){const t=this.$refs.realViewport;let e=t.clientWidth,i=e/this.cols*this.rows;i>t.clientHeight&&(i=t.clientHeight,e=i/this.rows*this.cols),this.minScaleCount=Math.floor(100*e/this.width),this.log=this.minScaleCount},handlePointerDown(t){if(this.endPoints=this.getPoint({x:t.clientX,y:t.clientY}),2==this.tool)this.isDrawing=!0,this.clearPixel(this.endPoints);else if(this.tool<6)this.isDrawing=!0,this.drawPixel(this.endPoints);else if(6==this.tool)this.ctx.fillStyle=this.currentColor,this.fillArea(this.endPoints),this.addHistory();else if(7==this.tool){this.ctx.beginPath(),this.ctx.rect(this.selectedRect.x,this.selectedRect.y,this.selectedRect.width,this.selectedRect.height),this.ctx.closePath();const t=this.ctx.isPointInPath(this.endPoints.x,this.endPoints.y);if(t){if(this.selectedImgData)this.ctx.putImageData(this.selectedBgData,0,0);else{this.showLastHistory(),this.selectedImgData=this.ctx.getImageData(this.selectedRect.x,this.selectedRect.y,this.selectedRect.width,this.selectedRect.height),this.offscreenCanvas.width=this.selectedRect.width,this.offscreenCanvas.height=this.selectedRect.height;const t=this.offscreenCanvas.getContext("2d");this.showLastHistory(),this.ctx.clearRect(this.selectedRect.x,this.selectedRect.y,this.selectedRect.width,this.selectedRect.height),this.selectedBgData=this.ctx.getImageData(0,0,this.width,this.height),t.putImageData(this.selectedImgData,0,0)}this.disx=this.endPoints.x-this.selectedRect.x,this.disy=this.endPoints.y-this.selectedRect.y,this.isDragingSelectRect=!0,this.ctx.drawImage(this.offscreenCanvas,this.selectedRect.x-1,this.selectedRect.y-1)}else this.showLastHistory(),0==this.selectRectAnimateId&&(this.selectRectAnimateId=requestAnimationFrame(this.dashedRectAnimate)),this.selectedImgData=null,this.selectedRect={x:0,y:0,width:0,height:0},this.selectedBgData=this.ctx.getImageData(0,0,this.width,this.height),this.isDrawing=!0}},handlePointerMove(t){this.ctx.fillStyle=this.currentColor,this.ctx.strokeStyle=this.currentColor;const e=this.getPoint({x:t.clientX,y:t.clientY});this.isDrawing?1==this.tool?(this.drawLine(this.endPoints,e),this.endPoints=e):2==this.tool?this.clearPixel(e):3==this.tool?(this.showLastHistory(),this.drawLine(this.endPoints,e)):4==this.tool?(this.showLastHistory(),this.drawRect(this.endPoints,e)):5==this.tool?(this.showLastHistory(),this.drawPixelEllipse(this.endPoints,e)):7==this.tool&&(this.showLastHistory(),this.select(this.endPoints,e)):7==this.tool&&this.isDragingSelectRect?(this.selectedRect.x=e.x-this.disx,this.selectedRect.y=e.y-this.disy):this.tool<6&&(this.showLastHistory(),this.overMove(e))},select(t,e){const i=Math.min(t.x,e.x),s=Math.min(t.y,e.y),o=Math.abs(e.x-t.x)+this.gridSize,h=Math.abs(e.y-t.y)+this.gridSize;this.selectedRect={x:i,y:s,width:o,height:h}},drawDashedRect(){this.ctx.lineDashOffset=(this.ctx.lineDashOffset+1)%100,this.ctx.setLineDash([0]),this.ctx.strokeStyle="#fff",this.ctx.strokeRect(this.selectedRect.x-5,this.selectedRect.y-5,this.selectedRect.width+10,this.selectedRect.height+10),this.ctx.setLineDash([50]),this.ctx.strokeStyle="#000",this.ctx.strokeRect(this.selectedRect.x-5,this.selectedRect.y-5,this.selectedRect.width+10,this.selectedRect.height+10),this.ctx.fillStyle="rgba(0,0,0,0.3)",this.ctx.fillRect(this.selectedRect.x,this.selectedRect.y,this.selectedRect.width,this.selectedRect.height),this.ctx.fillStyle=this.currentColor},dashedRectAnimate(){this.ctx.putImageData(this.selectedBgData,0,0),this.selectedRect.width*this.selectedRect.height!=0&&this.drawDashedRect(),this.selectedImgData&&this.ctx.drawImage(this.offscreenCanvas,this.selectedRect.x,this.selectedRect.y),this.selectRectAnimateId=requestAnimationFrame(this.dashedRectAnimate)},selectSave(){this.ctx.putImageData(this.selectedBgData,0,0),this.ctx.drawImage(this.offscreenCanvas,0,0,this.selectedRect.width,this.selectedRect.height,this.selectedRect.x,this.selectedRect.y,this.selectedRect.width,this.selectedRect.height),this.addHistory()},handlePointerUp(){this.isDrawing&&(this.isDrawing=!1,7==this.tool?this.selectedRect.width*this.selectedRect.height==0&&(cancelAnimationFrame(this.selectRectAnimateId),this.selectRectAnimateId=0,this.selectedRect={x:0,y:0,width:0,height:0},this.selectedImgData=null):this.addHistory()),this.isDragingSelectRect&&(this.isDragingSelectRect=!1,this.selectSave())},drawPixel(t,e=this.penSize){this.ctx.fillStyle=this.currentColor;const i=t.x/this.gridSize-Math.floor(e/2),s=t.y/this.gridSize-Math.floor(e/2);this.ctx.fillRect(this.gridSize*i,this.gridSize*s,this.gridSize*e,this.gridSize*e)},overMove(t){this.ctx.fillStyle="rgba(0,0,0,0.3)";const e=this.penSize,i=t.x/this.gridSize-Math.floor(e/2),s=t.y/this.gridSize-Math.floor(e/2);this.ctx.fillRect(this.gridSize*i,this.gridSize*s,this.gridSize*e,this.gridSize*e)},clearPixel(t){const e=this.penSize,i=t.x/this.gridSize-Math.floor(e/2),s=t.y/this.gridSize-Math.floor(e/2);this.ctx.clearRect(this.gridSize*i,this.gridSize*s,this.gridSize*e,this.gridSize*e)},drawLine(t,e){let i=t.x,s=t.y,o=Math.abs(e.x-t.x),h=Math.abs(e.y-t.y),l=t.x<e.x?this.gridSize:-this.gridSize,r=t.y<e.y?this.gridSize:-this.gridSize,n=o-h;while(1){if(this.drawPixel({x:i,y:s}),i===e.x&&s===e.y)break;let t=2*n;t>-h&&(n-=h,i+=l),t<o&&(n+=o,s+=r)}},drawRect(t,e){let i,s;if(this.shiftdown){const i=e.x-t.x,s=e.y-t.y,o=Math.min(Math.abs(i),Math.abs(s));e=i>0&&s>0?{x:t.x+o,y:t.y+o}:i>0&&s<0?{x:t.x+o,y:t.y-o}:i<0&&s>0?{x:t.x-o,y:t.y+o}:{x:t.x-o,y:t.y-o}}i={x:e.x,y:t.y},s={x:t.x,y:e.y},this.drawLine(t,i),this.drawLine(s,e),this.drawLine(t,s),this.drawLine(i,e)},drawPixelEllipse(t,e){const i=(t.x+e.x)/2/this.gridSize+.5,s=Math.abs((e.x-t.x)/this.gridSize/2),o=e.y>t.y?s:-s,h=this.shiftdown?t.y/this.gridSize+o+.5:(t.y+e.y)/2/this.gridSize+.5,l=this.shiftdown?s:Math.abs((e.y-t.y)/this.gridSize/2);let r=s%1?.5:0,n=l,a=Math.ceil(l*l-s*s*l+.25*s*s),c=2*l*l*r,d=2*s*s*n;this.drawEllipsePoints(i,h,r,n);while(c<d)r++,c+=2*l*l,a<=0?a+=c+l*l:(n--,d-=2*s*s,a+=c-d+l*l),this.drawEllipsePoints(i,h,r,n);let g=Math.ceil(l*l*(r+.5)*(r+.5)+s*s*(n-1)*(n-1)-s*s*l*l);while(n>0)n--,d-=2*s*s,g<=0?(r++,c+=2*l*l,g+=l*l-d+c):g+=s*s-d,this.drawEllipsePoints(i,h,r,n)},drawEllipsePoints(t,e,i,s){t-=.5,e-=.5,this.drawPixel({x:(t+i)*this.gridSize,y:(e-s)*this.gridSize}),this.drawPixel({x:(t-i)*this.gridSize,y:(e-s)*this.gridSize}),this.drawPixel({x:(t-i)*this.gridSize,y:(e+s)*this.gridSize}),this.drawPixel({x:(t+i)*this.gridSize,y:(e+s)*this.gridSize})},fillArea(t){const e=this.getColorAtPixel(t),i=this.hexToArgb(this.ctx.fillStyle);if(this.colorsMatch(e,i))return;const s=[t],{width:o,height:h}=this.$refs.canvas,l=new Set,r=(t,e)=>`${t},${e}`;while(s.length){const{x:t,y:i}=s.pop(),n=this.getColorAtPixel({x:t,y:i});!l.has(r(t,i))&&this.colorsMatch(n,e)&&(this.drawPixel({x:t,y:i},1),l.add(r(t,i)),t>0&&s.push({x:t-this.gridSize,y:i}),t<o-this.gridSize&&s.push({x:t+this.gridSize,y:i}),i>0&&s.push({x:t,y:i-this.gridSize}),i<h-this.gridSize&&s.push({x:t,y:i+this.gridSize}))}},getColorAtPixel(t){const{data:e}=this.ctx.getImageData(t.x,t.y,1,1);return e.slice(0,4)},hexToArgb(t){"#"===t[0]&&(t=t.slice(1));const e=parseInt(t,16);return 8===t.length?[e>>24&255,e>>16&255,e>>8&255,255&e]:6===t.length?[255,e>>16&255,e>>8&255,255&e]:4===t.length?[e>>12&255,e>>8&255,e>>4&255,255&e]:3===t.length?[255,e>>8&255,e>>4&255,255&e]:[0,0,0,0]},colorsMatch(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]},clearAll(){this.selectedRect={x:0,y:0,width:0,height:0},this.selectedImgData=null,this.ctx.clearRect(0,0,this.width,this.height),cancelAnimationFrame(this.selectRectAnimateId),this.selectRectAnimateId=0,this.addHistory()},isRectEqual(t,e){return t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height},getPoint(t){const e=this.scaleCount/100,i=this.$refs.canvas.getBoundingClientRect(),s=Math.floor((t.x-i.left)/this.gridSize/e)*this.gridSize,o=Math.floor((t.y-i.top)/this.gridSize/e)*this.gridSize;return this.coordinate=`x:${s/this.gridSize},y:${o/this.gridSize}`,{x:s,y:o}},showLastHistory(){const t=this.historys,e=t[t.length-1]["data"];this.ctx.putImageData(e,0,0)},addHistory(){this.historys.push({data:this.ctx.getImageData(0,0,this.width,this.height)}),this.updateOverview()},undo(){var t=this.historys;t&&t.length>1&&(t.pop(),this.showLastHistory(),this.updateOverview()),this.selectedImgData=null,this.selectedRect={x:0,y:0,width:0,height:0},cancelAnimationFrame(this.selectRectAnimateId),this.selectRectAnimateId=0},getPixelVector(t){const e=30,i=`rgba(${t.r},${t.g},${t.b},${t.a})`,s={x:t.x,y:t.y},o={x:t.x+e,y:t.y},h={x:t.x+e,y:t.y+e},l={x:t.x,y:t.y+e},r=(t,e)=>t+e*this.rows;return[[r(s.x,s.y),r(o.x,o.y),i],[r(o.x,o.y),r(h.x,h.y),i],[r(h.x,h.y),r(l.x,l.y),i],[r(l.x,l.y),r(s.x,s.y),i]]},getpathContent(t){let e=[],i=new Map;t.forEach((t=>{const e=this.getPixelVector(t);e.forEach((t=>{if(i.has(t[0]))if(i.has(t[1])){let s=i.get(t[1]),o=null;for(var e=0;e<s.length;e++)if(s[e][0]==t[0]&&s[e][1]==t[2]){o=s.splice(e,1),s.length>0?i.set(t[1],s):i.delete(t[1]);break}if(null==o){let e=i.get(t[0]).push([t[1],t[2]]);i[(t[0],e)]}}else{let e=i.get(t[0]).push([t[1],t[2]]);i[(t[0],e)]}else i.set(t[0],[[t[1],t[2]]])}))}));const s=(t,o=null,h=null)=>{if(console.log(`findPath(\n${t},\n${o},\n${h})`),i.has(t)){let r=i.get(t);if(null==h){let e=r.splice(0,1)[0];i.set(t,r),r.length<=0&&i.delete(t),o=[t,e[0]],s(e[0],o,e[1])}else{let r=i.get(t),n=null;for(var l=0;l<r.length;l++)if(r[l][1]==h){n=r.splice(l,1)[0],i.set(t,r),r.length<=0&&i.delete(t);break}if(n)o.push(n[0]),s(n[0],o,n[1]);else{if(o.push(h),e.push(o),!(i.size>0))return;{const t=i.keys().next().value,e=i.get(t)[0];s(e[0])}}}}else if(h){if(o.push(h),e.push(o),!(i.size>0))return;{const t=i.keys().next().value,e=i.get(t)[0];s(e[0])}}},o=i.keys().next().value;s(o);let h="",l=new Map;const r=t=>{const e=t%(30*this.rows);return{x:e,y:Math.floor((t-e)/this.rows)}};for(var[n,a]of(e.forEach((t=>{let e=r(t[0]),i={direction:"M",step:0},s=`M${e.x} ${e.y}`;for(var o=1;o<t.length-1;o++){let h=r(t[o]);e.x==h.x?"v"==i.direction?i.step+=h.y-e.y:(0!=i.step&&(s+=`${i.direction}${i.step}`),i.direction="v",i.step=h.y-e.y):"h"==i.direction?i.step+=h.x-e.x:(0!=i.step&&(s+=`${i.direction}${i.step}`),i.direction="h",i.step=h.x-e.x),e.x=h.x,e.y=h.y}s+="z";const h=t[t.length-1];if(l.has(h)){let t=l.get(h);t.push(s),l.set(h,t)}else l.set(h,[s])})),l)){let t='<path d="';a.forEach((e=>{t+=e})),t+=`" fill="${"rgba(0,0,0,255)"==n?"currentColor":n}"/>`,h+=t}return console.log(h),h},getSvgContent(t=!1){const e=this.width,i=this.height,s=this.ctx.getImageData(0,0,e,i),o=s.data;let h=[];for(let r=0;r<i;r+=this.gridSize)for(let t=0;t<e;t+=this.gridSize){const i=4*(r*e+t),s=o[i],l=o[i+1],n=o[i+2],a=o[i+3];a>0&&h.push({x:.3*t,y:.3*r,r:s,g:l,b:n,a:a})}let l=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ${.3*e} ${.3*i}">`;return l+=this.getpathContent(h),l+="</svg>",l},copySvgCode(){const t=this.getSvgContent();this.copyToClipboard(t)},saveAsSvg(){const t=this.getSvgContent(),e=new Blob([t],{type:"image/svg+xml"}),i=URL.createObjectURL(e),s=document.createElement("a");s.href=i,s.download="drawing.svg",s.click(),URL.revokeObjectURL(i)},saveAsPng(){const t=document.createElement("a"),e=this.maincanvas.toDataURL("image/png");t.href=e,t.download="drawing.png",t.click(),URL.revokeObjectURL(e)},async copyToClipboard(t){try{await navigator.clipboard.writeText(t),this.$toast.show("复制成功","success")}catch(e){this.$toast.show(e,"error")}},dragViewportDown(t){this.$refs.realViewport.removeEventListener("scroll",this.viewportScroll),this.viewport=this.$refs.viewport,this.disx=t.pageX-this.viewport.offsetLeft,this.disy=t.pageY-this.viewport.offsetTop,this.resizeViewport()},dragViewportMove(t){if(this.viewport){const s=this.$refs.canvas_overview,o=this.$refs.realViewport,h=s.clientWidth/this.maincanvas.clientWidth;var e=t.pageX-this.disx,i=t.pageY-this.disy;const l=s.offsetLeft+s.clientWidth-this.viewport.clientWidth-2,r=s.offsetTop+this.viewport.parentElement.clientHeight-this.viewport.clientHeight-2;e=Math.max(s.offsetLeft,Math.min(e,l)),i=Math.max(s.offsetTop,Math.min(i,r)),this.viewport.style.left=e+"px",this.viewport.style.top=i+"px",this.log=`${s.offsetLeft}`;const n=(e-s.offsetLeft)/h,a=(i-s.offsetTop)/h;o.scrollTop=a,o.scrollLeft=n}},dragViewportUp(){this.$refs.realViewport.addEventListener("scroll",this.viewportScroll),this.viewport&&(this.viewport=null)},viewportScroll(){this.log=`${this.$refs.realViewport.scrollTop},${this.$refs.realViewport.scrollLeft}`,this.resizeViewport()},zoomWheel(t){t.preventDefault();const e=t.deltaY;if(e<0){var i=Number(this.scaleCount)+1;this.scaleCount=Math.min(i,100)}else{i=Number(this.scaleCount)-1;this.scaleCount=Math.max(i,10)}this.resizeViewport()},zoomIn(){var t=Number(this.scaleCount)+10;this.scaleCount=Math.min(t,100),this.resizeViewport()},zoomOut(){var t=Number(this.scaleCount)-10;this.scaleCount=Math.max(t,10),this.resizeViewport()},zoomFit(){this.getMinScale(),this.scaleCount=this.minScaleCount,this.resizeViewport()},resizeViewport(){const t=this.$refs.canvas_overview,e=this.$refs.realViewport,i=t.clientWidth/this.maincanvas.clientWidth;this.$nextTick((()=>{const s=e.clientWidth*i,o=e.clientHeight*i;this.$refs.viewport.style.width=`${Math.floor(Math.min(s,t.clientWidth))}px`,this.$refs.viewport.style.height=`${Math.floor(Math.min(o,t.clientHeight)-1)}px`;const h=this.$refs.canvas_overview.offsetTop+this.$refs.realViewport.scrollTop*i,l=this.$refs.canvas_overview.offsetLeft+this.$refs.realViewport.scrollLeft*i;this.$refs.viewport.style.top=`${h}px`,this.$refs.viewport.style.left=`${l}px`}))}}},$=i(8998);const I=(0,$.Z)(_,[["render",k],["__scopeId","data-v-c59a53f2"]]);var M=I}}]);
//# sourceMappingURL=300.18fcdb18.js.map