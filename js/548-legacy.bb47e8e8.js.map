{"version":3,"file":"js/548-legacy.bb47e8e8.js","mappings":"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","sources":["webpack://augest/./src/components/pixelSvgEditor.vue","webpack://augest/./src/components/pixelSvgEditor.vue?08ef"],"sourcesContent":["<template>\r\n  \r\n  <div class=\"tool-setting-bar\">\r\n    <div class=\"left\">\r\n      <div class=\"tool-option\">\r\n        <div class=\"label\" style=\"width: 91px\">画笔大小({{penSize}}):</div>\r\n        <input type=\"range\" v-model=\"penSize\" min=\"1\" max=\"20\">\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"right\">\r\n      <div class=\"icon-item\" @click=\"toolsShow=!toolsShow\">\r\n        <svg-icon name=\"phone\"></svg-icon>\r\n      </div>\r\n      <div class=\"icon-item\" @click=\"undo\">\r\n        <svg-icon name=\"undo01\"></svg-icon>\r\n      </div>\r\n      <div class=\"icon-item-box\"  @click=\"dropDown($event,'sizeSettingShow')\">\r\n        <div class=\"icon-item\">\r\n          <svg-icon name=\"canvas01\"></svg-icon>\r\n        </div>\r\n        <div :class=\"{'size-setting':true,'show':dropDownBoxShow.sizeSettingShow} \" >\r\n          画布大小：\r\n          <div class=\"size\">\r\n            <input type=\"number\" v-model=\"rows\"  >\r\n            <span>x</span>\r\n            <input type=\"number\" v-model=\"cols\"  >\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"icon-item-box\" @click=\"dropDown($event,'downloadShow')\">\r\n        <div class=\"icon-item\" >\r\n          <svg-icon name=\"download01\"></svg-icon>\r\n        </div>\r\n        <div :class=\"{'size-setting':true,'show':dropDownBoxShow.downloadShow} \" >\r\n          <div class=\"drop-down-option\" @click=\"saveAsSvg\">保存成 svg</div>\r\n          <div class=\"drop-down-option\" @click=\"copySvgCode\">复制 svg 代码</div>\r\n          <div class=\"drop-down-option\" @click=\"saveAsPng\">保存成 png</div>\r\n        </div>\r\n      </div>\r\n        \r\n    </div>\r\n  </div>\r\n  <div class=\"work-area\">\r\n    <div class=\"left\" v-show=\"toolsShow\">\r\n      <div class=\"tools-bar\">\r\n        <div :class=\"{'tool-item':true,'active':tool == 1}\" @click=\"switchTool(1)\">\r\n          <svg-icon name=\"pencil\" className=\"tool-item-svg\"></svg-icon>\r\n        </div>\r\n        <div :class=\"{'tool-item':true,'active':tool == 2}\" @click=\"switchTool(2)\">\r\n          <svg-icon name=\"eraser\" className=\"tool-item-svg\"></svg-icon>\r\n        </div>\r\n        <div :class=\"{'tool-item':true,'active':tool == 3}\" @click=\"switchTool(3)\">\r\n          <svg-icon name=\"line\" className=\"tool-item-svg\"></svg-icon> \r\n        </div>\r\n        <div :class=\"{'tool-item':true,'active':tool == 4}\" @click=\"switchTool(4)\">\r\n          <svg-icon name=\"rect\" className=\"tool-item-svg\"></svg-icon>\r\n        </div>\r\n        <div :class=\"{'tool-item':true,'active':tool == 5}\" @click=\"switchTool(5)\">\r\n          <svg-icon name=\"circle\" className=\"tool-item-svg\"></svg-icon>\r\n        </div>\r\n        <div :class=\"{'tool-item':true,'active':tool == 6}\" @click=\"switchTool(6)\">\r\n          <svg-icon name=\"paintBuckets\" className=\"tool-item-svg\"></svg-icon>\r\n        </div>\r\n        <div :class=\"{'tool-item':true,'active':tool == 7}\" @click=\"switchTool(7)\">\r\n          <svg-icon name=\"select\" className=\"tool-item-svg\"></svg-icon>\r\n        </div>\r\n        <div class=\"tool-item\" @click=\"clearAll\">\r\n          <svg-icon name=\"delete02\" className=\"tool-item-svg\"></svg-icon>\r\n        </div>\r\n        <div class=\"tool-item-fullscreen\">\r\n          <div class=\"color back\" :style=\"{backgroundColor:bkgColor}\" @click=\"[currentColor,bkgColor] = [bkgColor,currentColor]\"></div>\r\n          <div class=\"color front\" :style=\"{backgroundColor:currentColor}\">\r\n            <input type=\"color\" class=\"colorInput-hidden\" ref=\"addColor1\" @change=\"addColor($event)\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"middle\" \r\n                        @pointermove=\"handlePointerMove\"\r\n                        @pointerup=\"handlePointerUp\" ref=\"realViewport\" @wheel=\"zoomWheel\">\r\n      <div style=\"position: absolute;left: 1rem\">{{coordinate}}</div>\r\n      <div class=\"drawing-area\" @pointerdown=\"handlePointerDown\">\r\n        <canvas :width=\"width\" :height=\"height\"  class=\"gridsytle\" :style=\"canvasStyle\" ref=\"canvas\">\r\n          \r\n        </canvas>\r\n      </div>\r\n    </div>\r\n    <div class=\"right\" v-show=\"toolsShow\">\r\n      <div class=\"overview\" @pointermove=\"dragViewportMove\" @pointerup=\"dragViewportUp\" @wheel=\"zoomWheel\">\r\n        <canvas class=\"gridsytle\" ref=\"canvas_overview\" :style=\"overviewStyle\" :width=\"overviewSize.width\" :height=\"overviewSize.height\"></canvas>\r\n        <div class=\"viewport\" ref=\"viewport\" @pointerdown=\"dragViewportDown\"></div>\r\n      </div>\r\n      <div class=\"overview-tools\">\r\n        <div class=\"icon-item\" @click=\"zoomIn\">\r\n          <svg-icon name=\"zoomIn\"></svg-icon>\r\n        </div>\r\n        <div class=\"icon-item\" @click=\"zoomOut\">\r\n          <svg-icon name=\"zoomOut\"></svg-icon>\r\n        </div>\r\n        <input type=\"range\" style=\"width: 80px;\" min=\"10\" max=\"100\" v-model=\"scaleCount\" @input=\"resizeViewport\">\r\n        <div class=\"icon-item\" @click=\"zoomFit\">\r\n          <svg-icon name=\"fit01\"></svg-icon>\r\n        </div>\r\n      </div>\r\n      <div class=\"color-tools\" ref=\"colorTools\" @pointermove=\"handleMove($event,index)\">\r\n        <div class=\"color-item draged\" v-show=\"dragedColorIndex != null\" ref=\"dragedColor\"></div>\r\n        <div v-for=\"(color,index) in myColors\" class=\"color-item\" ref=\"colorItem\" :style=\"{backgroundColor:color}\" \r\n              @pointerdown=\"handleStart($event,index)\"\r\n              \r\n              @pointerup=\"handleEnd($event,index)\"\r\n              ></div>\r\n        <div class=\"color-item\">+\r\n          <input type=\"color\" class=\"colorInput-hidden\" ref=\"addColor2\" @change=\"addColor($event)\">\r\n        </div>\r\n        <div :class=\"{'color-item delete':true,'show':dragedColorIndex!=null }\" @pointerup=\"handleEnd(event,-1)\">\r\n          <svg-icon name=\"delete02\" className=\"color-item-svg\"></svg-icon>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    width() {\r\n      return this.cols*this.gridSize;\r\n    },\r\n    height() {\r\n      return this.rows*this.gridSize;\r\n    },\r\n    overviewSize() {\r\n      let width = 180\r\n      let height = width/this.cols*this.rows\r\n      if(height > 140){\r\n        height = 140\r\n        width = height/this.rows*this.cols\r\n      }\r\n      return {width,height}\r\n    },\r\n    overviewStyle(){\r\n      const size = this.overviewSize.width/this.cols\r\n      return {\r\n           // 背景大小必须小于盒子的大小 \r\n          backgroundSize: `${2*size}px ${2*size}px`,\r\n          // 第二种渐变的偏移必须为为背景大小的一半 \r\n          backgroundPosition: `0 0 , ${size}px ${size}px`\r\n      }\r\n    },\r\n    canvasStyle(){\r\n      \r\n      const scale = this.scaleCount/100\r\n      const size = this.gridSize*scale\r\n      return {\r\n           // 背景大小必须小于盒子的大小 \r\n          width:`${this.width*scale}px`,\r\n          height:`${this.height*scale}px`,\r\n          backgroundSize: `${2*size}px ${2*size}px`,\r\n          // 第二种渐变的偏移必须为为背景大小的一半 \r\n          backgroundPosition: `0 0 , ${size}px ${size}px`\r\n      }\r\n    },\r\n },\r\n  data() {\r\n    return {\r\n      tool:1,\r\n      rows:13,\r\n      cols:13,\r\n      gridSize:100,\r\n      coordinate:'x:0,y:0',\r\n      currentColor:'#000',\r\n      bkgColor:\"#fff\",\r\n      // colorToolsEdited:false,\r\n      myColors:['#000000','#ffffff','#F96635','#f9A822','#FAEC86','#93d3a2','#2bbaa5','#008080'],\r\n      colorIndex:0,\r\n      dragedColorIndex:null,\r\n      isDrawing: false,\r\n      pixels: [],\r\n      endPoints:{x:0,y:0},\r\n      maincanvas:null,\r\n      ctx:null,\r\n      ovCtx:null,\r\n      historys:[],\r\n      log:\"\",\r\n      shiftdown:false,\r\n      dropDownBox:null,\r\n      dropDownBoxShow:{\r\n        sizeSettingShow:false,\r\n        downloadShow:false\r\n      },\r\n      penSize:1,\r\n      scaleCount:30,\r\n      minScaleCount:30,\r\n      viewport:null,\r\n      disx:0,\r\n      disy:0,\r\n      selectedRect:{x:0,y:0,width:0,height:0},\r\n      offscreenCanvas:null,\r\n      selectedImgData:null,\r\n      selectedBgData:null,\r\n      isDragingSelectRect:false,\r\n      selectRectAnimateId:0,\r\n      pressTimer:null,\r\n      toolsShow:true\r\n    };\r\n  },\r\n  mounted() {\r\n    this.init()\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    window.addEventListener('keyup', this.handleKeyUp);\r\n    this.$refs.realViewport.addEventListener('scroll', this.viewportScroll);\r\n\r\n  },\r\n  unmounted(){\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    window.removeEventListener('keyup', this.handleKeyUp);\r\n    if(this.$refs.realViewport){\r\n      this.$refs.realViewport.removeEventListener('scroll', this.viewportScroll);\r\n    }\r\n    // document.removeEventListener('click', this.offColorToolsEdit)\r\n    document.removeEventListener('click',this.closeDropDownBox)\r\n  },\r\n  methods: {\r\n    //颜色卡片长按事件\r\n    handleStart(event,index){\r\n        \r\n        this.pressTimer = setTimeout(() => {\r\n          // this.colorToolsEdited = true\r\n          this.dragedColorIndex = index\r\n          const el = event.target\r\n          this.disx = event.pageX - el.offsetLeft\r\n          this.disy = event.pageY - el.offsetTop\r\n          const dragedEl = this.$refs.dragedColor\r\n          dragedEl.style.backgroundColor = this.myColors[this.dragedColorIndex]\r\n          dragedEl.style.left = `${event.pageX - this.disx}px`\r\n          dragedEl.style.top = `${event.pageY - this.disy}px`\r\n          // document.addEventListener(\"click\",this.offColorToolsEdit)\r\n          clearTimeout(this.pressTimer)\r\n          this.pressTimer = null\r\n        }, 500);\r\n    },\r\n    handleMove(event,index){\r\n      if (this.pressTimer) {\r\n        clearTimeout(this.pressTimer);\r\n        this.pressTimer = null;\r\n      }\r\n      if(this.dragedColorIndex != null){\r\n        const dragedEl = this.$refs.dragedColor\r\n        dragedEl.style.backgroundColor = this.myColors[this.dragedColorIndex]\r\n        dragedEl.style.left = `${event.pageX - this.disx}px`\r\n        dragedEl.style.top = `${event.pageY - this.disy}px`\r\n      }\r\n    },\r\n    handleEnd(event,index){\r\n      // 如果定时器还在，说明是点击事件\r\n      if (this.pressTimer) {\r\n        clearTimeout(this.pressTimer);\r\n        this.pressTimer = null;\r\n        this.selectColor(index)\r\n      }\r\n      if(this.dragedColorIndex != null){\r\n        if(index == -1){\r\n          this.myColors.splice(this.dragedColorIndex,1)\r\n          this.dragedColorIndex = null\r\n        }else{\r\n          const colorTem = this.myColors[index]\r\n          this.myColors[index] = this.myColors[this.dragedColorIndex]\r\n          this.myColors[this.dragedColorIndex] = colorTem\r\n          this.dragedColorIndex = null\r\n        }\r\n      }\r\n    },\r\n    // offColorToolsEdit(e){\r\n    //   if(!this.$refs.colorTools.contains(e.target) && this.colorToolsEdited){\r\n    //     this.colorToolsEdited = false\r\n    //     document.removeEventListener('click', this.offColorToolsEdit)\r\n    //   }\r\n    // },\r\n    selectColor(index){\r\n      this.currentColor = this.myColors[index]\r\n    },\r\n    addColor(event){\r\n      const colorDom = event.currentTarget\r\n      const colorValue = colorDom.value\r\n      if(!this.myColors.includes(colorValue)){\r\n        this.myColors.push(colorValue)\r\n      }\r\n      this.currentColor = colorValue\r\n      \r\n    },\r\n    switchTool(index){\r\n      if(this.tool!= index){\r\n        if(this.tool == 7){\r\n          this.selectedImgData = null\r\n          this.selectedRect = {x:0,y:0,width:0,height:0}\r\n          cancelAnimationFrame(this.selectRectAnimateId)\r\n          this.selectRectAnimateId = 0\r\n          this.showLastHistory()\r\n        }\r\n        if(index == 7){\r\n          this.selectedBgData = this.ctx.getImageData(0,0,this.width,this.height)\r\n        }\r\n        this.tool = index\r\n      }\r\n    },\r\n    updateOverview(){\r\n      this.ovCtx.clearRect(0,0,this.overviewSize.width,this.overviewSize.height)\r\n      this.ovCtx.drawImage(\r\n        this.maincanvas,\r\n        0,0,this.width,this.height,\r\n        0,0,this.overviewSize.width,this.overviewSize.height\r\n      )\r\n    },\r\n    dropDown(event, keyname){\r\n      this.dropDownBox = event.target\r\n      const keys = Object.keys(this.dropDownBoxShow)\r\n      keys.forEach(key => {\r\n        this.dropDownBoxShow[key] = false\r\n      })\r\n      this.dropDownBoxShow[keyname] = true\r\n      document.addEventListener('click',this.closeDropDownBox)\r\n    },\r\n    closeDropDownBox(e){\r\n      if(!this.dropDownBox.contains(e.target)){\r\n        const keys = Object.keys(this.dropDownBoxShow)\r\n        keys.forEach(key => {\r\n          this.dropDownBoxShow[key] = false\r\n        })\r\n        document.removeEventListener('click',this.closeDropDownBox)\r\n      }\r\n    },\r\n    switchColor(point){\r\n      const color = this.getColorAtPixel(point)\r\n      const currentColor = 'rgba('+color.r+','+color.g+','+color.b+','+color.a+')'\r\n      if(currentColor != 'rgba(0,0,0,0)'){\r\n        this.currentColor = currentColor\r\n      }\r\n    },\r\n    handleKeyDown(event) {\r\n      if (event.key === 'Shift') {\r\n        this.shiftdown = true;\r\n      }\r\n    },\r\n    handleKeyUp(event) {\r\n      if (event.key === 'Shift') {\r\n        this.shiftdown = false;\r\n      }\r\n    },\r\n    init(){\r\n      if (window.PointerEvent) { \r\n        // Pointer events are supported. \r\n        this.log=\"Pointer events are supported.\"\r\n      }\r\n      this.maincanvas = this.$refs.canvas;\r\n      const overview = this.$refs.canvas_overview\r\n      this.ctx = this.maincanvas.getContext('2d');\r\n      this.ctx.lineWidth = 5\r\n      this.ovCtx = overview.getContext('2d')\r\n      this.addHistory()\r\n      this.resizeViewport()\r\n      this.getMinScale()\r\n      this.scaleCount = this.minScaleCount\r\n      this.offscreenCanvas = document.createElement('canvas');\r\n    },\r\n    getMinScale(){\r\n      const realViewport = this.$refs.realViewport\r\n      let width = realViewport.clientWidth\r\n      let height = width/this.cols*this.rows\r\n      if(height > realViewport.clientHeight){\r\n        height = realViewport.clientHeight\r\n        width = height/this.rows*this.cols\r\n      }\r\n      this.minScaleCount = Math.floor(100*width/this.width)\r\n      this.log = this.minScaleCount\r\n    },\r\n    \r\n    handlePointerDown(event){\r\n      \r\n      this.endPoints = this.getPoint({x:event.clientX,y:event.clientY})\r\n\r\n      if(this.tool == 2) {\r\n        this.isDrawing = true\r\n        this.clearPixel(this.endPoints)\r\n      }else if(this.tool < 6) {\r\n        this.isDrawing = true\r\n        this.drawPixel(this.endPoints)\r\n      }else if(this.tool == 6){\r\n        this.ctx.fillStyle = this.currentColor\r\n        this.fillArea(this.endPoints);\r\n        this.addHistory()\r\n      }else if(this.tool == 7){\r\n        this.ctx.beginPath()\r\n        this.ctx.rect(this.selectedRect.x,this.selectedRect.y,this.selectedRect.width,this.selectedRect.height)\r\n        this.ctx.closePath()\r\n        const isPointInPath = this.ctx.isPointInPath(this.endPoints.x,this.endPoints.y)\r\n        if(isPointInPath){\r\n          //开始拖拽\r\n          if(!this.selectedImgData){\r\n            this.showLastHistory()\r\n            this.selectedImgData = this.ctx.getImageData(this.selectedRect.x,this.selectedRect.y,this.selectedRect.width,this.selectedRect.height)\r\n            this.offscreenCanvas.width = this.selectedRect.width;\r\n            this.offscreenCanvas.height = this.selectedRect.height;\r\n            const offscreenCtx = this.offscreenCanvas.getContext('2d');\r\n            this.showLastHistory()\r\n            this.ctx.clearRect(this.selectedRect.x,this.selectedRect.y,this.selectedRect.width,this.selectedRect.height)\r\n            this.selectedBgData = this.ctx.getImageData(0,0,this.width,this.height)\r\n            offscreenCtx.putImageData(this.selectedImgData,0,0)\r\n             \r\n          }else{\r\n            //如果已经选了图像了则不用重新绘制区域图片\r\n            this.ctx.putImageData(this.selectedBgData,0,0)\r\n          }\r\n          this.disx = this.endPoints.x - this.selectedRect.x\r\n          this.disy = this.endPoints.y - this.selectedRect.y\r\n          \r\n          this.isDragingSelectRect = true\r\n          \r\n          this.ctx.drawImage(this.offscreenCanvas, this.selectedRect.x-1, this.selectedRect.y-1)\r\n        }else{\r\n          //选择新的区域\r\n          this.showLastHistory()\r\n\r\n          if(this.selectRectAnimateId == 0){\r\n            this.selectRectAnimateId = requestAnimationFrame(this.dashedRectAnimate)\r\n          }\r\n          // this.newSelected = true\r\n          this.selectedImgData = null\r\n          this.selectedRect = {x:0,y:0,width:0,height:0}\r\n          this.selectedBgData = this.ctx.getImageData(0,0,this.width,this.height)\r\n          \r\n          //选择区域\r\n          this.isDrawing = true\r\n        }\r\n      }\r\n    },\r\n\r\n    handlePointerMove(event){\r\n      this.ctx.fillStyle = this.currentColor\r\n      this.ctx.strokeStyle = this.currentColor\r\n      const currPoint = this.getPoint({x:event.clientX,y:event.clientY})\r\n      if(this.isDrawing){\r\n        if(this.tool == 1){\r\n          this.drawLine(this.endPoints, currPoint)\r\n          this.endPoints = currPoint\r\n        }else if(this.tool == 2){\r\n          this.clearPixel(currPoint)\r\n        }else if(this.tool == 3){\r\n          this.showLastHistory()\r\n          this.drawLine(this.endPoints, currPoint)\r\n        }else if(this.tool == 4){\r\n          this.showLastHistory()\r\n          this.drawRect(this.endPoints, currPoint)\r\n        }else if(this.tool == 5){\r\n          this.showLastHistory()\r\n          this.drawPixelEllipse(this.endPoints, currPoint)\r\n        }else if(this.tool == 7){\r\n          this.showLastHistory()\r\n          this.select(this.endPoints, currPoint)\r\n        }\r\n      }else{\r\n        if(this.tool == 7 && this.isDragingSelectRect){\r\n          // this.ctx.putImageData(this.selectedBgData, 0, 0)\r\n          this.selectedRect.x = currPoint.x-this.disx\r\n          this.selectedRect.y = currPoint.y-this.disy\r\n          // window.cancelAnimationFrame(this.selectRectAnimateId)\r\n          // this.ctx.drawImage(this.offscreenCanvas,this.selectedRect.x-1, this.selectedRect.y-1)\r\n          \r\n        }else if(this.tool < 6 ){\r\n          this.showLastHistory()\r\n          this.overMove(currPoint)\r\n        }\r\n      }\r\n    },\r\n    select(start,end){\r\n      const x = Math.min(start.x,end.x)\r\n      const y = Math.min(start.y,end.y)\r\n      const width = Math.abs(end.x-start.x)+this.gridSize\r\n      const height = Math.abs(end.y-start.y)+this.gridSize\r\n      this.selectedRect = {x, y, width, height}\r\n    },\r\n    drawDashedRect(){\r\n      this.ctx.lineDashOffset = (this.ctx.lineDashOffset+1)%100\r\n      this.ctx.setLineDash([0])\r\n      this.ctx.strokeStyle = \"#fff\"\r\n      this.ctx.strokeRect(this.selectedRect.x-5,this.selectedRect.y-5, this.selectedRect.width+10, this.selectedRect.height+10)\r\n      this.ctx.setLineDash([50])\r\n      this.ctx.strokeStyle = \"#000\"\r\n      this.ctx.strokeRect(this.selectedRect.x-5,this.selectedRect.y-5, this.selectedRect.width+10, this.selectedRect.height+10)\r\n      this.ctx.fillStyle = \"rgba(0,0,0,0.3)\"\r\n      this.ctx.fillRect(this.selectedRect.x,this.selectedRect.y, this.selectedRect.width, this.selectedRect.height)\r\n      this.ctx.fillStyle = this.currentColor\r\n    },\r\n    dashedRectAnimate(){\r\n      this.ctx.putImageData(this.selectedBgData,0,0)\r\n      if(this.selectedRect.width*this.selectedRect.height != 0 ){\r\n        this.drawDashedRect()\r\n      }\r\n      if(this.selectedImgData){\r\n        this.ctx.drawImage(this.offscreenCanvas,this.selectedRect.x, this.selectedRect.y)\r\n      }\r\n      this.selectRectAnimateId = requestAnimationFrame(this.dashedRectAnimate)\r\n    },\r\n    selectSave(){\r\n      this.ctx.putImageData(this.selectedBgData,0,0)\r\n      this.ctx.drawImage(\r\n        this.offscreenCanvas,\r\n        0,0,this.selectedRect.width, this.selectedRect.height,\r\n        this.selectedRect.x,this.selectedRect.y,this.selectedRect.width, this.selectedRect.height)\r\n      this.addHistory()\r\n      \r\n    },\r\n    handlePointerUp(){\r\n      if(this.isDrawing){\r\n        this.isDrawing = false\r\n        if(this.tool == 7){\r\n          //选择区域结束判断选择区域,如果长或宽小于0则关闭选择动画，取消选择\r\n          if(this.selectedRect.width*this.selectedRect.height == 0){\r\n            cancelAnimationFrame(this.selectRectAnimateId)\r\n            this.selectRectAnimateId = 0\r\n            this.selectedRect = {x:0,y:0,width:0,height:0}\r\n            this.selectedImgData = null\r\n          }\r\n        }else{\r\n          this.addHistory()\r\n        }\r\n      }\r\n      if(this.isDragingSelectRect){\r\n        this.isDragingSelectRect = false\r\n        this.selectSave()\r\n        // this.dashedRectAnimate()\r\n      }\r\n      \r\n    },\r\n    drawPixel(point, size=this.penSize){\r\n      this.ctx.fillStyle = this.currentColor\r\n      const x = point.x/this.gridSize - Math.floor(size/2)\r\n      const y = point.y/this.gridSize - Math.floor(size/2)\r\n      this.ctx.fillRect(this.gridSize*x,this.gridSize*y,this.gridSize*size,this.gridSize*size)\r\n      // this.ctx.font = \"40px serif\"\r\n      // this.ctx.fillStyle = \"#ffffff\"\r\n      // this.ctx.fillText(`${(x+y*this.cols)*30}`,this.gridSize*x,this.gridSize*y+30)\r\n    },\r\n    overMove(point){\r\n      this.ctx.fillStyle = 'rgba(0,0,0,0.3)'\r\n      const size = this.penSize\r\n      const x = point.x/this.gridSize - Math.floor(size/2)\r\n      const y = point.y/this.gridSize - Math.floor(size/2)\r\n      this.ctx.fillRect(this.gridSize*x,this.gridSize*y,this.gridSize*size,this.gridSize*size)\r\n    },\r\n    clearPixel(point){\r\n      const size = this.penSize\r\n      const x = point.x/this.gridSize - Math.floor(size/2)\r\n      const y = point.y/this.gridSize - Math.floor(size/2)\r\n      this.ctx.clearRect(this.gridSize*x,this.gridSize*y,this.gridSize*size,this.gridSize*size)\r\n    },\r\n    // 直线BH算法https://blog.csdn.net/myf_666/article/details/128164135\r\n    drawLine(start,end){\r\n      let x = start.x\r\n      let y = start.y\r\n      let dx = Math.abs(end.x - start.x)\r\n      let dy = Math.abs(end.y - start.y)\r\n      let sx = (start.x < end.x)? this.gridSize : -this.gridSize\r\n      let sy = (start.y < end.y)? this.gridSize : -this.gridSize\r\n      let err = dx - dy\r\n      while(true){\r\n        this.drawPixel({x,y})\r\n        if(x === end.x && y === end.y) break\r\n        let e2 = 2 * err;\r\n        if(e2 > -dy){\r\n          err -= dy;\r\n          x += sx;\r\n        }\r\n        if(e2 < dx){\r\n          err += dx;\r\n          y += sy\r\n        }\r\n      }\r\n    },\r\n    \r\n    drawRect(start,end){\r\n      let rightUp, leftDown;\r\n\r\n      if (this.shiftdown) {\r\n        // 计算水平和垂直距离\r\n        const deltaX = end.x - start.x;\r\n        const deltaY = end.y - start.y;\r\n\r\n        // 选择较小的距离作为正方形的边长\r\n        const sideLength = Math.min(Math.abs(deltaX), Math.abs(deltaY));\r\n\r\n        // 根据方向调整 end 点的位置\r\n        if (deltaX > 0 && deltaY > 0) {\r\n          end = { x: start.x + sideLength, y: start.y + sideLength };\r\n        } else if (deltaX > 0 && deltaY < 0) {\r\n          end = { x: start.x + sideLength, y: start.y - sideLength };\r\n        } else if (deltaX < 0 && deltaY > 0) {\r\n          end = { x: start.x - sideLength, y: start.y + sideLength };\r\n        } else {\r\n          end = { x: start.x - sideLength, y: start.y - sideLength };\r\n        }\r\n      }\r\n\r\n      rightUp = { x: end.x, y: start.y };\r\n      leftDown = { x: start.x, y: end.y };\r\n\r\n      this.drawLine(start, rightUp);\r\n      this.drawLine(leftDown, end);\r\n      this.drawLine(start, leftDown);\r\n      this.drawLine(rightUp, end);\r\n      \r\n    },\r\n    //椭圆BH算法https://www.cnblogs.com/fortunely/p/17681502.html\r\n     drawPixelEllipse(start, end) {\r\n      const xc = (start.x + end.x) / 2 / this.gridSize + 0.5\r\n      const rx = Math.abs((end.x - start.x) / this.gridSize / 2);\r\n      const drx = end.y>start.y ? rx : -rx\r\n      const yc = this.shiftdown ? start.y/this.gridSize + drx + 0.5 : (start.y + end.y) / 2 / this.gridSize + 0.5\r\n      const ry = this.shiftdown ? rx : Math.abs((end.y - start.y) / this.gridSize / 2);\r\n\r\n      let x = rx%1 ? 0.5 : 0;\r\n      let y = ry;\r\n      let d1 = Math.ceil(ry * ry - rx * rx * ry + 0.25 * rx * rx);\r\n      let dx = 2 * ry * ry * x;\r\n      let dy = 2 * rx * rx * y;\r\n      this.drawEllipsePoints(xc, yc, x, y)\r\n\r\n      while (dx < dy) {\r\n        x++\r\n        dx += 2 * ry * ry;\r\n        if (d1 <= 0) {\r\n          d1 += dx + ry * ry;\r\n        } else {\r\n          y--;\r\n          dy -= 2 * rx * rx;\r\n          d1 += dx - dy + ry * ry;\r\n        }\r\n        \r\n        this.drawEllipsePoints(xc, yc, x, y)\r\n      }\r\n\r\n      let d2 = Math.ceil(ry * ry * (x + 0.5) * (x + 0.5) + rx * rx * (y - 1) * (y - 1) - rx * rx * ry * ry);\r\n      while (y > 0) {\r\n        y--\r\n        dy -= 2 * rx * rx\r\n        if (d2 <= 0) {\r\n          x++\r\n          dx += 2 *ry*ry\r\n          d2 += ry*ry - dy + dx\r\n          \r\n        } else {\r\n          d2 += rx * rx - dy\r\n        }\r\n        this.drawEllipsePoints(xc, yc, x, y)\r\n      }\r\n    },\r\n    drawEllipsePoints(xc, yc, x, y) {\r\n      xc -= 0.5\r\n      yc -= 0.5\r\n      this.drawPixel({ x: (xc + x) * this.gridSize, y: (yc - y) * this.gridSize });\r\n      this.drawPixel({ x: (xc - x) * this.gridSize, y: (yc - y) * this.gridSize });\r\n      this.drawPixel({ x: (xc - x) * this.gridSize, y: (yc + y) * this.gridSize });\r\n      this.drawPixel({ x: (xc + x) * this.gridSize, y: (yc + y) * this.gridSize });\r\n    },\r\n    // 在你的像素画板中实现一个填充功能（类似于“油漆桶”工具），你需要用到一种称为“洪水填充”（Flood Fill）算法。这个算法将会递归地或使用队列填充相同颜色的相邻像素。为了避免递归深度过深导致栈溢出，我们可以使用队列来实现非递归的广度优先搜索（BFS）填充算法。\r\n    fillArea(startPoint) {\r\n      const targetColor = this.getColorAtPixel(startPoint);\r\n      const fillColor = this.hexToArgb(this.ctx.fillStyle);\r\n\r\n      if (this.colorsMatch(targetColor, fillColor)) {\r\n        return; // 避免填充相同颜色的区域\r\n      }\r\n\r\n      const stack = [startPoint];\r\n      const { width, height } = this.$refs.canvas;\r\n      const visited = new Set();\r\n\r\n      const key = (x, y) => `${x},${y}`;\r\n      \r\n      while (stack.length) {\r\n        const { x, y } = stack.pop();\r\n        const currentColor = this.getColorAtPixel({ x, y });\r\n\r\n        if (!visited.has(key(x, y)) && this.colorsMatch(currentColor, targetColor)) {\r\n          this.drawPixel({ x, y }, 1);\r\n          visited.add(key(x, y));\r\n\r\n          if (x > 0) stack.push({ x: x - this.gridSize, y });\r\n          if (x < width - this.gridSize) stack.push({ x: x + this.gridSize, y });\r\n          if (y > 0) stack.push({ x, y: y - this.gridSize });\r\n          if (y < height - this.gridSize) stack.push({ x, y: y + this.gridSize });\r\n\r\n        }\r\n      }\r\n    },\r\n    getColorAtPixel(point) {\r\n      const { data } = this.ctx.getImageData(point.x, point.y, 1, 1);\r\n      return data.slice(0, 4);\r\n    },\r\n    hexToArgb(hex) {\r\n      if (hex[0] === '#') hex = hex.slice(1);\r\n      const bigint = parseInt(hex, 16);\r\n      if (hex.length === 8) {\r\n        return [(bigint >> 24) & 255, (bigint >> 16) & 255, (bigint >> 8) & 255, bigint & 255];\r\n      } else if (hex.length === 6) {\r\n        return [255, (bigint >> 16) & 255, (bigint >> 8) & 255, bigint & 255];\r\n      } else if (hex.length === 4) {\r\n        return [(bigint >> 12) & 15 * 17, (bigint >> 8) & 15 * 17, (bigint >> 4) & 15 * 17, bigint & 15 * 17];\r\n      } else if (hex.length === 3) {\r\n        return [255, (bigint >> 8) & 15 * 17, (bigint >> 4) & 15 * 17, bigint & 15 * 17];\r\n      }\r\n      return [0, 0, 0, 0]; // 默认返回透明黑色\r\n    },\r\n    colorsMatch(color1, color2) {\r\n      return color1[0] === color2[0] && color1[1] === color2[1] && color1[2] === color2[2] && color1[3] === color2[3];\r\n    },\r\n    clearAll(){\r\n      this.selectedRect = {x:0,y:0,width:0,height:0}\r\n      this.selectedImgData = null\r\n      this.ctx.clearRect(0,0,this.width,this.height)\r\n      cancelAnimationFrame(this.selectRectAnimateId)\r\n      this.selectRectAnimateId = 0\r\n      this.addHistory()\r\n    },\r\n    isRectEqual(rect1, rect2) {\r\n      return rect1.x === rect2.x &&\r\n             rect1.y === rect2.y &&\r\n             rect1.width === rect2.width &&\r\n             rect1.height === rect2.height;\r\n    },\r\n    getPoint(point){\r\n      const scale = this.scaleCount/100\r\n      const rect = this.$refs.canvas.getBoundingClientRect();\r\n      const x = Math.floor((point.x - rect.left) / this.gridSize/scale)*this.gridSize\r\n      const y = Math.floor((point.y - rect.top) / this.gridSize/scale)*this.gridSize\r\n      this.coordinate = `x:${x / this.gridSize},y:${y / this.gridSize}`\r\n      return {x,y}\r\n    },\r\n    showLastHistory() {\r\n      const history = this.historys\r\n      const imageData = history[history.length - 1]['data']\r\n      this.ctx.putImageData(imageData, 0, 0)\r\n    },\r\n    addHistory() {\r\n      this.historys.push({\r\n        data: this.ctx.getImageData(0, 0, this.width, this.height)\r\n      })\r\n      this.updateOverview()\r\n    },\r\n    undo(){\r\n      var history = this.historys;\r\n      \r\n      if(history && history.length > 1){\r\n        history.pop();\r\n        this.showLastHistory();\r\n        this.updateOverview()\r\n      }\r\n\r\n      //清空选择区域\r\n      this.selectedImgData = null\r\n      this.selectedRect = {x:0,y:0,width:0,height:0}\r\n      cancelAnimationFrame(this.selectRectAnimateId)\r\n      this.selectRectAnimateId = 0\r\n    },\r\n    getPixelVector(pixel){\r\n      const pixelSize = 30\r\n      const color = `rgba(${pixel.r},${pixel.g},${pixel.b},${pixel.a})`\r\n      const x1 = {x:pixel.x, y:pixel.y}\r\n      const x2 = {x:pixel.x + pixelSize, y:pixel.y}\r\n      const x3 = {x:pixel.x + pixelSize, y:pixel.y + pixelSize}\r\n      const x4 = {x:pixel.x, y:pixel.y + pixelSize}\r\n      const point2Num = (x,y)=>{\r\n        return x + y*this.rows\r\n      }\r\n      //定义了正方形的4个边向量[向量起点，向量终点，向量右边的颜色]\r\n      return [[point2Num(x1.x,x1.y),point2Num(x2.x,x2.y),color],\r\n              [point2Num(x2.x,x2.y),point2Num(x3.x,x3.y),color],\r\n              [point2Num(x3.x,x3.y),point2Num(x4.x,x4.y),color],\r\n              [point2Num(x4.x,x4.y),point2Num(x1.x,x1.y),color]]\r\n    },\r\n    getpathContent(pixelData){\r\n      let pathLists = [] \r\n      //这三个list的index代表同一条路径的集合、开始点、结束点\r\n\r\n      let pointWithNextPoints  = new Map()\r\n      pixelData.forEach(pixel => {\r\n        // console.log(pixel)\r\n        const pixelVectors = this.getPixelVector(pixel)\r\n        //生成一个单向的相邻点的map\r\n        pixelVectors.forEach(vector => {\r\n          // console.log(`开始添加向量：（${vector[0]},${vector[1]}）`)\r\n          if(pointWithNextPoints.has(vector[0])){\r\n            if(pointWithNextPoints.has(vector[1])){\r\n              // console.log(`${vector[0]},${vector[1]}=======>${vector[1]},${vector[0]}`)\r\n              let nextPoints = pointWithNextPoints.get(vector[1])\r\n              \r\n              // nextPoints.forEach(nextpoint=>{\r\n              //   console.log(nextpoint)\r\n              // })\r\n              let findSameVector = null\r\n              for(var i=0; i < nextPoints.length ; i++){\r\n                // console.log(`${nextPoints[i]},${vector[0]},${vector[2]}`)\r\n                // console.log(nextPoints[i][0] == vector[0] && nextPoints[i][1] == vector[2])\r\n                if(nextPoints[i][0] == vector[0] && nextPoints[i][1] == vector[2]){\r\n                  findSameVector = nextPoints.splice(i,1)\r\n                  // console.log(\"存在同一条线，不添加\")\r\n                  if(nextPoints.length > 0){\r\n                    pointWithNextPoints.set(vector[1],nextPoints)\r\n                    // console.log(\"删除已经存在的线段\")\r\n                  }else{\r\n                    pointWithNextPoints.delete(vector[1])\r\n                    // console.log(\"删除已经存在的线段,起始点没有相邻点，删除起始点\")\r\n                  }\r\n                  \r\n                  break;\r\n                }\r\n              }\r\n\r\n              if(findSameVector == null){\r\n                let newValue = pointWithNextPoints.get(vector[0]).push([vector[1],vector[2]])\r\n                pointWithNextPoints[vector[0], newValue]\r\n                // console.log(\"添加成功\")\r\n              }\r\n            }else{\r\n              let newValue = pointWithNextPoints.get(vector[0]).push([vector[1],vector[2]])\r\n              pointWithNextPoints[vector[0], newValue]\r\n              // console.log(\"添加成功\")\r\n            }\r\n          }else{\r\n            pointWithNextPoints.set(vector[0], [[vector[1],vector[2]]])\r\n            // console.log(\"添加成功\")\r\n          }\r\n        })\r\n      });\r\n      // console.log(pointWithNextPoints)\r\n      // for(const [key,value] of pointWithNextPoints){\r\n      //   console.log(key+\":\")\r\n      //   value.forEach(v => {\r\n      //     console.log(`point:${v[0]},color:${v[1]}`)\r\n      //   })\r\n      //   console.log(\"=============================\")\r\n      // }\r\n      //遍历pointWithNextPoints得到路径\r\n\r\n      const findPath = (point,path=null, color=null)=>{\r\n        console.log(`findPath(\\n${point},\\n${path},\\n${color})`)\r\n        if(pointWithNextPoints.has(point)){\r\n          let nextPoints = pointWithNextPoints.get(point)\r\n          if(color == null){\r\n            let nextPoint = nextPoints.splice(0,1)[0]\r\n            pointWithNextPoints.set(point,nextPoints)\r\n            if(nextPoints.length <= 0){\r\n              pointWithNextPoints.delete(point)\r\n              // console.log(`这个点是路径起始点，且只有一个继点，移除${point}`)\r\n            }\r\n            path = [point,nextPoint[0]]\r\n            findPath(nextPoint[0], path, nextPoint[1])\r\n          }else{\r\n            let nextPoints = pointWithNextPoints.get(point)\r\n            let nextPoint = null\r\n            for(var i=0 ; i < nextPoints.length ; i++){\r\n              if(nextPoints[i][1] == color){\r\n\r\n                nextPoint = nextPoints.splice(i, 1)[0]\r\n                pointWithNextPoints.set(point,nextPoints)\r\n                if(nextPoints.length <= 0){\r\n                  pointWithNextPoints.delete(point)\r\n                  // console.log(`这个点的继点被全部匹配完了，移除${point}`)\r\n                }\r\n                break\r\n              }\r\n            }\r\n            if(nextPoint){\r\n              path.push(nextPoint[0])\r\n              findPath(nextPoint[0], path, nextPoint[1])\r\n            }else{\r\n              path.push(color)\r\n              // console.log(`map里有thispoint:${point},当时相同颜色:${color}没有可以找的点`)\r\n              pathLists.push(path)\r\n              if(pointWithNextPoints.size > 0){\r\n                const newkey = pointWithNextPoints.keys().next().value\r\n                const newstart = pointWithNextPoints.get(newkey)[0]\r\n\r\n                findPath(newstart[0])\r\n              }else{\r\n                return\r\n              }\r\n            }\r\n          }\r\n        }else{\r\n          if(color){\r\n            path.push(color)\r\n            pathLists.push(path)\r\n            // console.log(`map里找不到thispoint:${point}了`)\r\n            if(pointWithNextPoints.size > 0){\r\n              const newkey = pointWithNextPoints.keys().next().value\r\n              const newstart = pointWithNextPoints.get(newkey)[0]\r\n              // console.log(`**********newstart[0]:${newstart[0]}`)\r\n              findPath(newstart[0])\r\n            }else{\r\n              return\r\n            }\r\n          }\r\n          return\r\n        }\r\n        \r\n      }\r\n      const start = pointWithNextPoints.keys().next().value\r\n      // console.log(`start:${start}-----------`)\r\n      findPath(start)\r\n      let pathContent = ``\r\n      let colorWithPath = new Map() //保存颜色-路径的映射，用于合并相同颜色的路径\r\n      const num2Point = (num)=>{\r\n        const x = num%(this.rows*30)\r\n        return {x,y:Math.floor((num-x)/this.rows)}\r\n      }\r\n\r\n      pathLists.forEach((pathList)=>{\r\n        // console.log(pathList)\r\n        let p1 = num2Point(pathList[0])\r\n        // console.log(pathList[0],p1)\r\n        let step = {direction:\"M\",step:0}\r\n        let path = `M${p1.x} ${p1.y}`\r\n        for(var i=1; i<pathList.length-1 ;i++){\r\n          let p2 = num2Point(pathList[i])\r\n          // console.log(p2)\r\n          if(p1.x == p2.x){\r\n            if(step.direction == \"v\"){\r\n              step.step += (p2.y - p1.y)\r\n              // console.log(`1:::::::::${step.direction},${step.step}`)\r\n            }else{\r\n              if(step.step != 0){\r\n                path += `${step.direction}${step.step}`\r\n              }\r\n              step.direction = \"v\"\r\n              step.step = (p2.y - p1.y)\r\n              // console.log(`2:::::::::${step.direction},${step.step}`)\r\n            }\r\n          }else{\r\n            if(step.direction == \"h\"){\r\n              step.step += (p2.x - p1.x)\r\n              // console.log(`3:::::::::${step.direction},${step.step}`)\r\n            }else{\r\n              if(step.step != 0){\r\n                path += `${step.direction}${step.step}`\r\n                \r\n              }\r\n              step.direction = \"h\"\r\n              step.step = (p2.x - p1.x)\r\n              // console.log(`${p2.y},${p1.y},${p2.y-p1.y}`)\r\n              // console.log(`4:::::::::${step.direction},${step.step}`)\r\n            }\r\n          }\r\n          p1.x = p2.x\r\n          p1.y = p2.y\r\n          // console.log(`step:\"${step.direction}\",${step.step}`)\r\n        }\r\n        path += \"z\"\r\n        const colorKey = pathList[pathList.length-1]\r\n        if(colorWithPath.has(colorKey)){\r\n          let newValue = colorWithPath.get(colorKey)\r\n          newValue.push(path) \r\n          colorWithPath.set(colorKey, newValue)\r\n        }else{\r\n          colorWithPath.set(colorKey, [path])\r\n        }\r\n      })\r\n      for(var [key,value] of colorWithPath){\r\n        let colorPath = `<path d=\"`\r\n        value.forEach((path)=>{\r\n          // console.log(key,path)\r\n          colorPath += path\r\n        })\r\n        colorPath += `\" fill=\"${key=='rgba(0,0,0,255)'?'currentColor':key}\"/>`\r\n        pathContent += colorPath\r\n      }\r\n      console.log(pathContent)\r\n      return pathContent\r\n    },\r\n    getSvgContent(filled=false){\r\n      const width = this.width;\r\n      const height = this.height;\r\n      const imageData = this.ctx.getImageData(0, 0, width, height)\r\n\r\n      //解析像素数据，gpt生成代码\r\n      const pixels = imageData.data;\r\n\r\n      let pixelData = [];\r\n      for (let y = 0; y < height; y+=this.gridSize) {\r\n        for (let x = 0; x < width; x+=this.gridSize) {\r\n          const index = (y * width + x) * 4;\r\n          const r = pixels[index];\r\n          const g = pixels[index + 1];\r\n          const b = pixels[index + 2];\r\n          const a = pixels[index + 3];\r\n\r\n          // 只保存非透明像素\r\n          if (a > 0) {\r\n            pixelData.push({ x:x*0.3, y:y*0.3, r, g, b, a });\r\n          }\r\n        } \r\n      }\r\n    \r\n      //生成svg文件,gpt生成代码\r\n      let svgContent = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width*0.3} ${height*0.3}\">`;\r\n      \r\n      if(false){\r\n        pixelData.forEach(pixel => {\r\n          let color = `rgba(${pixel.r},${pixel.g},${pixel.b},${pixel.a})`\r\n          if(color =='rgba(0,0,0,255)'){\r\n            color = \"currentColor\"\r\n          }\r\n          svgContent += `<rect x=\"${pixel.x}\" y=\"${pixel.y}\" width=\"30\" height=\"30\" fill=\"${color}\" />`;\r\n        });\r\n      }else{\r\n        svgContent += this.getpathContent(pixelData)\r\n      }\r\n      \r\n\r\n      svgContent += '</svg>';\r\n      return svgContent\r\n      \r\n    },\r\n    copySvgCode(){\r\n      const content = this.getSvgContent()\r\n      this.copyToClipboard(content)\r\n    },\r\n    saveAsSvg(){\r\n      const svgContent = this.getSvgContent()\r\n      //保存svg文件\r\n      const blob = new Blob([svgContent], { type: 'image/svg+xml' });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = 'drawing.svg';\r\n      link.click();\r\n      URL.revokeObjectURL(url);\r\n    },\r\n    saveAsPng(){\r\n      const link = document.createElement('a');\r\n      const url =  this.maincanvas.toDataURL(\"image/png\");\r\n      link.href = url;\r\n      link.download = 'drawing.png';\r\n      link.click();\r\n      URL.revokeObjectURL(url);\r\n    },\r\n    async copyToClipboard(content) {\r\n      try {\r\n        await navigator.clipboard.writeText(content);\r\n        this.$toast.show('复制成功','success')\r\n      } catch (err) {\r\n        this.$toast.show(err,'error')\r\n      }\r\n    },\r\n    dragViewportDown(e){\r\n      this.$refs.realViewport.removeEventListener('scroll', this.viewportScroll);\r\n      this.viewport = this.$refs.viewport\r\n      this.disx = e.pageX - this.viewport.offsetLeft\r\n      this.disy = e.pageY - this.viewport.offsetTop\r\n      this.resizeViewport()\r\n    },\r\n    dragViewportMove(e){\r\n      if(this.viewport){\r\n        const overview = this.$refs.canvas_overview\r\n        const realViewport = this.$refs.realViewport\r\n        const scale = overview.clientWidth/this.maincanvas.clientWidth\r\n\r\n        var left = e.pageX - this.disx\r\n        var top = e.pageY - this.disy\r\n        const leftmax = overview.offsetLeft +  overview.clientWidth - this.viewport.clientWidth - 2\r\n        const topmax = overview.offsetTop + this.viewport.parentElement.clientHeight - this.viewport.clientHeight - 2\r\n        left = Math.max(overview.offsetLeft, Math.min(left, leftmax));\r\n        top = Math.max(overview.offsetTop, Math.min(top, topmax));\r\n        this.viewport.style.left = left + 'px';\r\n        this.viewport.style.top = top + 'px';\r\n        this.log = `${overview.offsetLeft}`\r\n        const scrollLeft = (left - overview.offsetLeft)/scale\r\n        const scrollTop = (top - overview.offsetTop)/scale\r\n        realViewport.scrollTop = scrollTop\r\n        realViewport.scrollLeft = scrollLeft\r\n      }\r\n    },\r\n    dragViewportUp(){\r\n      this.$refs.realViewport.addEventListener('scroll', this.viewportScroll);\r\n      if(this.viewport)\r\n        this.viewport=null\r\n    },\r\n    viewportScroll(){\r\n      this.log = `${this.$refs.realViewport.scrollTop},${this.$refs.realViewport.scrollLeft}`\r\n      this.resizeViewport()\r\n    },\r\n    zoomWheel(event){\r\n      event.preventDefault()\r\n      const deltaY = event.deltaY\r\n      if(deltaY < 0){\r\n        var scale = Number(this.scaleCount) + 1\r\n        this.scaleCount = Math.min(scale,100)\r\n      }else{\r\n        var scale = Number(this.scaleCount) - 1\r\n        this.scaleCount = Math.max(scale,10)\r\n      }\r\n      this.resizeViewport()\r\n    },\r\n    zoomIn(){\r\n      var scale = Number(this.scaleCount) + 10\r\n      this.scaleCount = Math.min(scale,100)\r\n      this.resizeViewport()\r\n    },\r\n    zoomOut(){\r\n      var scale = Number(this.scaleCount) - 10\r\n      this.scaleCount = Math.max(scale,10)\r\n      this.resizeViewport()\r\n    },\r\n    zoomFit(){\r\n      this.getMinScale()\r\n      this.scaleCount = this.minScaleCount\r\n      this.resizeViewport()\r\n    },\r\n    resizeViewport(){\r\n      //设置viewport大小\r\n      const overview = this.$refs.canvas_overview\r\n      const realViewport = this.$refs.realViewport\r\n      const scale = overview.clientWidth/this.maincanvas.clientWidth\r\n      this.$nextTick(()=>{\r\n        const viewportWidth = realViewport.clientWidth*scale\r\n        const viewportHeight = realViewport.clientHeight*scale\r\n        this.$refs.viewport.style.width = `${Math.floor(Math.min(viewportWidth,overview.clientWidth))}px`\r\n        this.$refs.viewport.style.height = `${Math.floor(Math.min(viewportHeight,overview.clientHeight)-1)}px`\r\n        const viewportTop = this.$refs.canvas_overview.offsetTop + this.$refs.realViewport.scrollTop*scale\r\n        const viewportLeft = this.$refs.canvas_overview.offsetLeft + this.$refs.realViewport.scrollLeft*scale\r\n        this.$refs.viewport.style.top = `${viewportTop}px`\r\n        this.$refs.viewport.style.left = `${viewportLeft}px`\r\n      })\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.drawing-area {\r\n  border: 0.5px solid #d9d9d9;\r\n  width: fit-content;\r\n  font-size: 0;\r\n\r\n  height: fit-content;\r\n}\r\ncanvas {\r\n  position: relative;\r\n  z-index: 1;\r\n  touch-action: none;\r\n}\r\n.canvas-grid {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.tools-bar {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 84px;\r\n  height: fit-content;\r\n  \r\n}\r\n.tool-item{\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  padding: 5px;\r\n  margin: 1px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.tool-item-fullscreen{\r\n  width: 100%;\r\n  height: 40px;\r\n  padding: 5px;\r\n  margin: 1px;\r\n  margin-top: 20px;\r\n  border-radius:5px;\r\n  position: relative;\r\n}\r\n\r\n.tool-item-fullscreen .color{\r\n  width: 30px;\r\n  height: 30px;\r\n  top:50%;\r\n  left: 50%;\r\n  position: absolute;\r\n  border: 2px solid var(--fontNormal);\r\n}\r\n.tool-item-fullscreen .color.front{\r\n  transform: translate(calc(-50% - 8px),calc(-50% - 8px));\r\n}\r\n\r\n.tool-item-fullscreen .color.back{\r\n  transform: translate(calc(-50% + 8px),calc(-50% + 8px));\r\n}\r\n\r\n\r\n\r\n\r\n.tool-item-svg {\r\n  width: 30px !important;\r\n  height: 30px !important;\r\n}\r\n\r\n.tool-item:hover , .tool-item.active{\r\n  background-color: var(--white-highlight);\r\n}\r\n.tool-item img{\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.tool-setting-bar {\r\n  height: 30px;\r\n  border-bottom: var(--box-border);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  align-items: center;\r\n}\r\n.tool-setting-bar > div{\r\n  display: flex;\r\n  height: 100%\r\n}\r\n.work-area{\r\n  display: flex;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  height: calc(100vh - 91px);\r\n}\r\n\r\n.work-area .middle{\r\n  flex: 1;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  overflow: auto;\r\n  border-left: var(--box-border);\r\n  user-select: none;\r\n  padding: 0;\r\n}\r\n\r\n.work-area .right{\r\n  border-left: var(--box-border);\r\n  width: 180px\r\n}\r\n\r\n.overview {\r\n  width: 180px;\r\n  height: 140px;\r\n  background-color: var(--canvas-bgc);\r\n  display: flex;\r\n  justify-content: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n\r\n\r\n.viewport{\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 30px;\r\n  background-color: transparent;\r\n  border: 1px solid #425aef;\r\n  box-shadow: 0 0 0 5000px rgba(0, 0, 0, 0.3); /* 创建透明区域 */\r\n  z-index: 2;\r\n}\r\n\r\n.overview-tools{\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.work-area > div{\r\n  padding: 5px;\r\n}\r\n\r\n.icon-item-box{\r\n  position: relative;\r\n}\r\n\r\n\r\n.icon-item {\r\n  padding:2px;\r\n  width:26px;\r\n  height: 26px;\r\n}\r\n\r\n.icon-item:hover {\r\n  background-color: var(--white-highlight);\r\n}\r\n\r\n.size-setting {\r\n  position: absolute;\r\n  background-color: var(--box-bgc);\r\n  border: var(--box-border);\r\n  right: 0;\r\n  top: 30px;\r\n  border-radius: 8px;\r\n  padding: 8px;\r\n  z-index: 999;\r\n  opacity: 0;\r\n  transform: translateY(15%);\r\n  transition: opacity 0.5s ease,transform 0.5s ease;\r\n  pointer-events: none;\r\n\r\n}\r\n\r\n.size-setting.show{\r\n  pointer-events: all;\r\n  opacity: 1;\r\n  transform: translateY(0)\r\n}\r\n\r\n.size-setting .size{\r\n  display: flex;\r\n  width: 140px;\r\n  align-items: center;\r\n}\r\n\r\n.size-setting .size > input {\r\n  width: 40px;\r\n}\r\n\r\n.tool-option {\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 2px;\r\n}\r\n\r\n.tool-option .label{\r\n  font-size: 15px;\r\n  line-height: 15px;\r\n}\r\n\r\n.tool-option input[type='range']{\r\n  width: 90px;\r\n  height: 15px;\r\n}\r\n\r\n.drop-down-option{\r\n  width: 120px;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.drop-down-option:hover{\r\n  background-color: var(--white-highlight)\r\n}\r\n\r\n.gridsytle{\r\n  background: linear-gradient(\r\n      -45deg,\r\n      #d9d9d9 25%,\r\n      transparent 25%,\r\n      transparent 75%,\r\n      #d9d9d9 75%,\r\n      #d9d9d9 100%\r\n    ),\r\n    linear-gradient(\r\n      -45deg,\r\n      #d9d9d9 25%,\r\n      transparent 25%,\r\n      transparent 75%,\r\n      #d9d9d9 75%,\r\n      #d9d9d9 100%\r\n    );\r\n  background-color: white;\r\n}\r\n\r\n.color-tools {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  user-select: none;\r\n  position: relative;\r\n}\r\n\r\n\r\n.color-item {\r\n  width: 28px;\r\n  height: 28px;\r\n  margin: 1px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 25px;\r\n  position: relative;\r\n  box-shadow: inset 0px 0px 0px 1px var(--fontNormal)\r\n}\r\n\r\n.color-item-svg {\r\n  width: 20px !important;\r\n}\r\n\r\n.color-item.active {\r\n  box-shadow: inset 0px 0px 0px 2px rgb(255, 255, 255);\r\n}\r\n\r\n.color-item:hover {\r\n  box-shadow: inset 0px 0px 0px 2px var(--fontNormal);\r\n}\r\n\r\n.color-item.delete {\r\n  width:100%;\r\n  height: 50px;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n  cursor: auto;\r\n}\r\n\r\n.color-item.delete.show{\r\n  opacity: 1;\r\n}\r\n\r\n.color-item.delete:hover , .color-item.draged:hover{\r\n  box-shadow:none;\r\n}\r\n\r\n.color-item.draged {\r\n  opacity: 0.5;\r\n  position: absolute;\r\n  z-index: 99;\r\n  pointer-events: none;\r\n  box-shadow: inset 0px 0px 0px 2px var(--fontNormal)\r\n}\r\n\r\n.colorInput-hidden {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0;\r\n/*  display: none;*/\r\n}\r\n\r\n</style>\r\n","import { render } from \"./pixelSvgEditor.vue?vue&type=template&id=5879b22a&scoped=true\"\nimport script from \"./pixelSvgEditor.vue?vue&type=script&lang=js\"\nexport * from \"./pixelSvgEditor.vue?vue&type=script&lang=js\"\n\nimport \"./pixelSvgEditor.vue?vue&type=style&index=0&id=5879b22a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5879b22a\"]])\n\nexport default __exports__"],"names":["class","style","_createElementVNode","ref","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","penSize","type","$event","min","max","_hoisted_5","onClick","_cache","toolsShow","_createVNode","_component_svg_icon","name","$options","undo","apply","arguments","dropDown","_hoisted_6","_normalizeClass","dropDownBoxShow","sizeSettingShow","_hoisted_7","rows","_hoisted_8","cols","_hoisted_9","downloadShow","saveAsSvg","copySvgCode","saveAsPng","_hoisted_10","_hoisted_11","_hoisted_12","tool","switchTool","className","clearAll","_hoisted_13","_normalizeStyle","backgroundColor","bkgColor","_ref","currentColor","onChange","addColor","onPointermove","handlePointerMove","onPointerup","handlePointerUp","onWheel","zoomWheel","_hoisted_14","coordinate","onPointerdown","handlePointerDown","width","height","canvasStyle","_hoisted_16","dragViewportMove","dragViewportUp","overviewStyle","overviewSize","dragViewportDown","_hoisted_18","zoomIn","zoomOut","scaleCount","onInput","resizeViewport","zoomFit","handleMove","_ctx","index","_hoisted_19","dragedColorIndex","_createElementBlock","_Fragment","_renderList","myColors","color","handleStart","handleEnd","_hoisted_21","event","computed","this","gridSize","size","backgroundSize","concat","backgroundPosition","scale","data","colorIndex","isDrawing","pixels","endPoints","x","y","maincanvas","ctx","ovCtx","historys","log","shiftdown","dropDownBox","minScaleCount","viewport","disx","disy","selectedRect","offscreenCanvas","selectedImgData","selectedBgData","isDragingSelectRect","selectRectAnimateId","pressTimer","mounted","init","window","addEventListener","handleKeyDown","handleKeyUp","$refs","realViewport","viewportScroll","unmounted","removeEventListener","document","closeDropDownBox","methods","_this","setTimeout","el","target","pageX","offsetLeft","pageY","offsetTop","dragedEl","dragedColor","left","top","clearTimeout","selectColor","splice","colorTem","colorDom","currentTarget","colorValue","value","includes","push","cancelAnimationFrame","showLastHistory","getImageData","updateOverview","clearRect","drawImage","keyname","_this2","keys","Object","forEach","key","e","_this3","contains","switchColor","point","getColorAtPixel","r","g","b","a","PointerEvent","canvas","overview","canvas_overview","getContext","lineWidth","addHistory","getMinScale","createElement","clientWidth","clientHeight","Math","floor","getPoint","clientX","clientY","clearPixel","drawPixel","fillStyle","fillArea","beginPath","rect","closePath","isPointInPath","putImageData","offscreenCtx","requestAnimationFrame","dashedRectAnimate","strokeStyle","currPoint","drawLine","drawRect","drawPixelEllipse","select","overMove","start","end","abs","drawDashedRect","lineDashOffset","setLineDash","strokeRect","fillRect","selectSave","length","undefined","dx","dy","sx","sy","err","e2","rightUp","leftDown","deltaX","deltaY","sideLength","xc","rx","drx","yc","ry","d1","ceil","drawEllipsePoints","d2","startPoint","targetColor","fillColor","hexToArgb","colorsMatch","stack","_this$$refs$canvas","visited","Set","_stack$pop","pop","has","add","_this$ctx$getImageDat","slice","hex","bigint","parseInt","color1","color2","isRectEqual","rect1","rect2","getBoundingClientRect","history","imageData","getPixelVector","pixel","_this4","pixelSize","x1","x2","x3","x4","point2Num","getpathContent","pixelData","_this5","pathLists","pointWithNextPoints","Map","pixelVectors","vector","nextPoints","get","findSameVector","i","set","delete","newValue","findPath","path","console","nextPoint","newkey","next","newstart","pathContent","colorWithPath","num2Point","num","pathList","p1","step","direction","p2","colorKey","_step","_iterator","_createForOfIteratorHelper","_loop","_step$value","_slicedToArray","colorPath","s","n","done","f","getSvgContent","svgContent","content","copyToClipboard","blob","Blob","url","URL","createObjectURL","link","href","download","click","revokeObjectURL","toDataURL","_this6","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","navigator","clipboard","writeText","$toast","show","t0","stop","leftmax","topmax","parentElement","scrollLeft","scrollTop","preventDefault","Number","_this7","$nextTick","viewportWidth","viewportHeight","viewportTop","viewportLeft","__exports__","render"],"sourceRoot":""}